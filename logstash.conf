input {
  file {
    # Absolutna cesta k logu
    path => "<ABSOLUTNA CESTA>/atologs/*.log"

	# len pre lokalne testovanie
	start_position => beginning
	
	codec => multiline {
		pattern => "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])\s(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])?(Z)?"
		negate => "true"
		what => "previous"
	}
  }
}
filter { 
	
	grok { 
		match => { "message" => "^(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\s(NID_OPERATIONAL:(%{NUMBER:NID_OPERATIONAL:int})?)?(%{SPACE})?(NID_ENGINE:(%{NUMBER:NID_ENGINE:int})?)?(%{SPACE})?*%{LOGLEVEL:level}\s%{NUMBER:pid}\s---\s(\[(?<thread>%{DATA})\]\s(?<class>%{DATA})\s*)?\s*:\s(?<request_type>%{DATA})(%{SPACE})??(:)?(%{SPACE})?payload=%{GREEDYDATA:logged_json}(\])?" } 
	} 

	mutate{
		convert => ["timestamp", "string"]
	}
	date {
		match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
		timezone => "Europe/Prague" 
		target => "@timestamp"
	}
	json { 
		source => "logged_json"
		target => "parsed_json"
	}
}
output {   
	elasticsearch {
		hosts => [ "localhost:9200" ]
		index => "dev-ts-logback-%{+xxxx.ww}"
	}
	# debug vystup do konzoly
	stdout { codec => rubydebug }
}
